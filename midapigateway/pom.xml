<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.viajeseci.midoffice</groupId>
    <artifactId>midapigateway</artifactId>
    <version>1.4.0</version>
    <packaging>jar</packaging>

    <name>midapigateway</name>
    <description>Midregistry application</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.2.2.RELEASE</version>
        <relativePath/>
    </parent>

    <properties>
        <guava.version>19.0</guava.version>
        <!-- plugin versions -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>
        <maven-enforcer-plugin.version>1.4.1</maven-enforcer-plugin.version>
        <build-helper-maven-plugin.version>3.0.0</build-helper-maven-plugin.version>
        <maven-jar-compiler.version>2.3.2</maven-jar-compiler.version>
        <maven-plugin.version>2.8.2</maven-plugin.version>
        <docker.maven.plugin.version>1.1.1</docker.maven.plugin.version>
        <docker.image.prefix>registry.veci.geci</docker.image.prefix>
        <lombok.version>1.16.8</lombok.version>
        <slf4j-api.version>1.7.19</slf4j-api.version>
        <maven-checkstyle-plugin.version>2.17</maven-checkstyle-plugin.version>
        <maven-pmd-plugin.version>3.6</maven-pmd-plugin.version>
        <plugin.taglist.version>2.4</plugin.taglist.version>
        <plugin.site.version>3.5</plugin.site.version>
        <plugin.jacoco.version>0.7.7.201606060606</plugin.jacoco.version>
        <plugin.failsafe.version>2.19.1</plugin.failsafe.version>
        <plugin.buildnumber.version>1.3</plugin.buildnumber.version>
        <!-- Spring version -->
        <spring.boot.version>2.0.4.RELEASE</spring.boot.version>
        <main.basedir>${project.basedir}</main.basedir>
        <gelf.version>1.1.0</gelf.version>
        <java.version>1.8</java.version>
		<spring-cloud.version>Hoxton.RELEASE</spring-cloud.version>
    </properties>
    <profiles>
        <profile>
            <id>sonar</id>
            <build>
                <defaultGoal>clean install site</defaultGoal>
            </build>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <profile>
            <id>default</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <sonar.java.source>${maven.compiler.source}</sonar.java.source>
                <sonar.java.source>${maven.compiler.source}</sonar.java.source>
                <sonar.jacoco.itReportPath>${project.basedir}/target/jacoco-it.exec</sonar.jacoco.itReportPath>
                <sonar.jacoco.reportPath>${project.basedir}/target/jacoco.exec</sonar.jacoco.reportPath>
                <sonar.scm.disabled>true</sonar.scm.disabled>
                <sonar.language>java</sonar.language>
                <sonar.exclusions>**/target/generated-sources/**/*</sonar.exclusions>
                <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
<!--                <sonar.branch>${project.version}</sonar.branch>-->
            </properties>
        </profile>
        <profile>
            <id>sonar_local</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <properties>
                <sonar.host.url>http://localhost:9000/</sonar.host.url>
                <sonar.java.source>${maven.compiler.source}</sonar.java.source>
                <sonar.jacoco.itReportPath>${project.basedir}/target/jacoco-it.exec</sonar.jacoco.itReportPath>
                <sonar.jacoco.reportPath>${project.basedir}/target/jacoco.exec</sonar.jacoco.reportPath>
                <sonar.language>java</sonar.language>
            </properties>
        </profile>
    </profiles>


    <dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-gateway</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
            <exclusions>
            	<exclusion>
            		<groupId>com.google.guava</groupId>
            		<artifactId>guava</artifactId>
            	</exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-zipkin</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>

        <dependency> 
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zipkin</artifactId>
		</dependency>
		
		<dependency> 
			<groupId>org.springframework.amqp</groupId>
			<artifactId>spring-kafka</artifactId>
		</dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-hystrix</artifactId>
            <version>1.4.6.RELEASE</version>
<!--             <exclusions> -->
<!--             	<exclusion> -->
<!--             		<groupId>com.google.guava</groupId> -->
<!--             		<artifactId>guava</artifactId> -->
<!--             	</exclusion> -->
<!--             	<exclusion> -->
<!--             		<groupId>org.hdrhistogram</groupId> -->
<!--             		<artifactId>HdrHistogram</artifactId> -->
<!--             	</exclusion> -->
<!--             </exclusions> -->
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <exclusions>
            	<exclusion>
            		<groupId>org.hdrhistogram</groupId>
            		<artifactId>HdrHistogram</artifactId>
            	</exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

           <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <!-- monitoring service requirement -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>1.2.3</version>
        </dependency>
        <dependency>
            <groupId>de.siegmar</groupId>
            <artifactId>logback-gelf</artifactId>
            <version>${gelf.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

<!--         	<dependency> -->
<!-- 			<groupId>org.springframework.boot</groupId> -->
<!-- 			<artifactId>spring-boot-devtools</artifactId> -->
<!-- 			<scope>runtime</scope> -->
<!-- 			<optional>true</optional> -->
<!-- 		</dependency> -->

    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>${project.basedir}/config</directory>
                <targetPath>config</targetPath>
                <filtering>true</filtering>
            </resource>
        </resources>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>

            <!-- Activate the MANIFEST properties to show in log the application name and version -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven-jar-compiler.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <!-- enforcer -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${maven-enforcer-plugin.version}</version>
                <executions>
                    <execution>
                        <id>enforce-versions</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <bannedPlugins>
                                    <includes>
                                        <include>org.jacoco:jacoco-maven-plugin:${plugin.jacoco.version}</include>
                                        <include>org.apache.maven.plugins:maven-failsafe-plugin:${plugin.failsafe.version}</include>
                                        <include>org.apache.maven.plugins:maven-checkstyle-plugin:${maven-checkstyle-plugin.version}</include>
                                    </includes>
                                </bannedPlugins>
                                <dependencyConvergence />
                                <reactorModuleConvergence />
                                <requireJavaVersion>
                                    <version>1.8</version>
                                </requireJavaVersion>
                                <requireMavenVersion>
                                    <version>[3.0.3,)</version>
                                </requireMavenVersion>
                                <requireNoRepositories />
                                <requirePluginVersions>
                                    <message>Best Practice is to always define plugin versions!</message>
                                    <banLatest>true</banLatest>
                                    <banSnapshots>true</banSnapshots>
                                    <unCheckedPluginList>org.apache.maven.plugins:maven-clean-plugin,
                                        org.apache.maven.plugins:maven-install-plugin,
                                        org.apache.maven.plugins:maven-site-plugin,
                                        org.apache.maven.plugins:maven-deploy-plugin,
                                        org.apache.maven.plugins:maven-resources-plugin</unCheckedPluginList>
                                </requirePluginVersions>
                                <requireReleaseDeps>
                                    <onlyWhenRelease>true</onlyWhenRelease>
                                    <message>No snapshots allowed in release version!</message>
                                </requireReleaseDeps>
                            </rules>
                            <failFast>true</failFast>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- build number -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>${plugin.buildnumber.version}</version>
                <configuration>
                    <timestampFormat>yyyy-MM-dd HH:mm:ss</timestampFormat>
                </configuration>
            </plugin>
            <!-- CheckStyle -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <executions>
                    <execution>
                        <id>checkstyle</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <failOnViolation>true</failOnViolation>
                            <configLocation>/src/test/resources/checkstyle.xml</configLocation>
                            <includeResources>true</includeResources>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                            <includeTestResources>true</includeTestResources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- PMD -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven-pmd-plugin.version}</version>
                <configuration>
                    <failOnViolation>true</failOnViolation>
                    <printFailingErrors>true</printFailingErrors>
                    <rulesets>
                        <ruleset>${main.basedir}/src/test/resources/pmd.xml</ruleset>
                    </rulesets>
                    <verbose>true</verbose>
                    <includeTests>true</includeTests>
                </configuration>
                <executions>
                    <execution>
                        <id>pmd</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- spotify docker -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.plugin.version}</version>
                <configuration>
                    <imageName>${docker.image.prefix}/vecisa/${project.artifactId}</imageName>
                    <imageTags>
                        <imageTag>${project.version}</imageTag>
                    </imageTags>
                    <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
                    <resources>
                        <resource>
                            <targetPath />
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
                <executions>
                    <execution>
                        <id>build-image-private</id>
                        <phase>install</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <registryUrl>http://registry.veci.geci</registryUrl>
                            <serverId>docker-registry</serverId>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build-image-public</id>
                        <phase>install</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <imageName>vecisacontainerregistry.azurecr.io/vecisa/${project.artifactId}</imageName>
			                <registryUrl>https://vecisacontainerregistry.azurecr.io</registryUrl>
                            <serverId>docker-registry-azure</serverId>
                        </configuration>
                    </execution>
                    <execution>
                        <id>push-image-private</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>push</goal>
                        </goals>
                        <configuration>
                            <registryUrl>http://registry.veci.geci</registryUrl>
                            <serverId>docker-registry</serverId>
                        </configuration>
                    </execution>
                    <execution>
                        <id>push-image-public</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>push</goal>
                        </goals>
                        <configuration>
                            <imageName>vecisacontainerregistry.azurecr.io/vecisa/${project.artifactId}</imageName>
			                <registryUrl>https://vecisacontainerregistry.azurecr.io</registryUrl>
                            <serverId>docker-registry-azure</serverId>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- spring boot jar -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.version}</version>
                <configuration>
                    <mainClass>com.viajeseci.midoffice.midapigateway.Application</mainClass>
                    <layout>ZIP</layout>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <distributionManagement>
        <repository>
            <id>releases</id>
            <name>Repositorio de Releases</name>
            <url>${release-upload}</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <name>Repositorio de Snapshots</name>
            <url>${snapshot-upload}</url>
        </snapshotRepository>
    </distributionManagement>
</project>
